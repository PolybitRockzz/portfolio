.app-container {
  position: relative;
  width: 100vw;
  height: 100vh;
  background-color: #0a0a0a;
  overflow: hidden;
}

/* Dark green corner glows */
.app-container::after {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: 
    radial-gradient(ellipse 800px 600px at top left, rgba(0, 100, 50, 0.35) 0%, transparent 100%),
    radial-gradient(ellipse 800px 600px at bottom right, rgba(0, 100, 50, 0.35) 0%, transparent 100%);
  pointer-events: none;
  z-index: 1;
  opacity: 0;
  animation: fadeInGlows 800ms ease 0s forwards;
}

.grid-background {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-image: 
    linear-gradient(rgba(255, 255, 255, 0.01) 1px, transparent 1px),
    linear-gradient(90deg, rgba(255, 255, 255, 0.01) 1px, transparent 1px);
  background-size: 32px 32px;
  pointer-events: none;
}

/* Highlight layer that only brightens grid lines near cursor.
   We create an overlay that uses the same grid background but with
   stronger line color, then mask it with a radial gradient centered
   at the mouse position so only the area near the cursor shows the
   brighter grid lines. */
.grid-background::before {
  content: '';
  position: absolute;
  inset: 0;
  pointer-events: none;
  background-image: 
    linear-gradient(rgba(255,255,255,0.12) 1px, transparent 1px),
    linear-gradient(90deg, rgba(255,255,255,0.12) 1px, transparent 1px);
  background-size: 32px 32px;
  /* mask to reveal only near the mouse */
  -webkit-mask-image: radial-gradient(300px circle at var(--mouse-x) var(--mouse-y), rgba(0,0,0,1) 0%, rgba(0,0,0,0.35) 40%, rgba(0,0,0,0) 70%);
  mask-image: radial-gradient(300px circle at var(--mouse-x) var(--mouse-y), rgba(0,0,0,1) 0%, rgba(0,0,0,0.35) 40%, rgba(0,0,0,0) 70%);
  transition: opacity 0.18s ease, transform 0.18s ease;
}

.content {
  position: relative;
  z-index: 10;
  display: flex;
  flex-direction: column;
  align-items: flex-start; /* left align items */
  justify-content: center; /* center content vertically */
  min-height: 100vh;
  text-align: left;
  padding: 6rem 8rem; /* more left padding for left-aligned layout */
  --addr-row-height: 48px; /* fixed row height for address row to avoid vertical reflow */
}

.content h1 {
  font-family: 'Space Grotesk', monospace;
  font-size: 5rem;
  font-weight: 700;
  line-height: 0.85;
  letter-spacing: 0.08em;
  background: linear-gradient(
    135deg, 
    rgba(255, 255, 255, 0.95) 0%, 
    rgba(255, 255, 255, 0.5) 100%
  );
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
  background-clip: text;
  opacity: 1; /* headings animated via .title-block */
}

.name-row {
  display: inline-flex;
  align-items: center;
  gap: 0.6rem;
}

/* Title block: animate SWASTIK + BISWAS (and audio btn) together */
.title-block {
  opacity: 0;
  animation: fadeInHeadings 600ms ease 500ms forwards;
  display: inline-block;
}

.audio-btn {
  background: rgba(255,255,255,0.04);
  border: 1px solid rgba(255,255,255,0.08);
  color: white;
  padding: 0.3rem 0.3rem;
  font-size: 1rem;
  cursor: pointer;
}

.audio-btn.playing {
  background: rgba(100,200,100,0.12);
  border-color: rgba(100,200,100,0.28);
}

.content .subtitle {
  font-family: 'Space Grotesk', monospace;
  font-size: 1rem;
  color: rgba(255, 255, 255, 0.6);
  max-width: 800px;
  line-height: 1.4;
  letter-spacing: 0.03em;
  margin: 0;
  margin-top: 1.5rem;
  margin-bottom: 0.2rem;
  opacity: 0;
  animation: fadeInContent 600ms ease 1250ms forwards;
}

/* Flags and addresses */
.flags-block {
  margin-top: 1.2rem;
  display: flex;
  align-items: center;
  gap: 1.5rem;
}

.flags {
  display: flex;
  gap: 0.5rem;
}

.flag-btn {
  background: transparent;
  border: 1px solid rgba(255,255,255,0);
  color: white;
  font-size: 1.4rem;
  padding: 0.3rem 0.45rem;
  cursor: pointer;
  transition: transform 150ms ease, border-color 150ms ease, background-color 150ms ease;
}
.flag-btn:hover {
  transform: translateY(-2px);
  border-color: rgba(255,255,255,0.2);
}
.flag-btn.active {
  background-color: rgba(255,255,255,0);
  border-color: rgba(255,255,255,0.2);
}

/* ensure inline SVG flags scale nicely inside button */
.flag-btn svg {
  display: block;
  width: 28px;
  height: 20px;
}

.addresses {
  min-width: 320px;
}

.address {
  background: rgba(255,255,255,0.02);
  padding: 0.6rem 0.9rem;
  color: rgba(255,255,255,0.6);
  margin-top: 0.6rem;
}

/* Animations: fade in from left and right */
.animate-in-left {
  animation: inFromLeft 360ms ease both;
}
.animate-in-right {
  animation: inFromRight 360ms ease both;
}

@keyframes inFromLeft {
  from { opacity: 0; transform: translateX(-18px); }
  to { opacity: 1; transform: translateX(0); }
}

@keyframes inFromRight {
  from { opacity: 0; transform: translateX(18px); }
  to { opacity: 1; transform: translateX(0); }
}

/* Inline sequence: flag, us box, flag, in box */
.inline-row {
  display: flex;
  align-items: center;
  gap: 1rem;
  margin-top: 1.2rem;
  height: var(--addr-row-height); /* lock row height to prevent vertical shifts */
  opacity: 0;
  animation: fadeInContent 600ms ease 1250ms forwards;
}

.addr-box {
  display: flex;
  align-items: center;
  justify-content: center;
  overflow: hidden;
  background: rgba(255,255,255,0);
  transition: flex-basis 320ms cubic-bezier(.2,.9,.2,1), padding 320ms cubic-bezier(.2,.9,.2,1), opacity 220ms ease, transform 220ms ease;
  color: rgba(255,255,255,0.9);
  height: var(--addr-row-height);
  box-sizing: border-box;
  padding: 0 0.6rem; /* horizontal padding only; vertical centered by height */
}

.addr-text {
  font-size: 0.95rem;
  color: rgba(255,255,255,0.6);
  line-height: var(--addr-row-height);
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}

.addr-box.collapsed {
  flex-basis: 0;
  padding: 0;
  opacity: 0;
  visibility: hidden;
  pointer-events: none;
}

.addr-box.expanded {
  flex-basis: 420px;
  padding: 0.3rem 0.6rem;
  opacity: 1;
}

/* Loading animations - sequential fade-in on page load */
@keyframes fadeInGlows {
  from { opacity: 0; }
  to { opacity: 1; }
}

@keyframes fadeInHeadings {
  from { opacity: 0; transform: translateY(8px); }
  to { opacity: 1; transform: translateY(0); }
}

@keyframes fadeInContent {
  from { opacity: 0; transform: translateY(12px); }
  to { opacity: 1; transform: translateY(0); }
}
